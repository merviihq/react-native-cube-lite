name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  merge_group:
    types:
      - checks_requested

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - name: Lint files
        run: yarn lint

      - name: Typecheck files
        run: yarn typecheck

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - name: Run unit tests
        run: yarn test --maxWorkers=2 --coverage

  build-library:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - name: Build package
        run: yarn prepare

  # build-release:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Setup
  #       uses: ./.github/actions/setup

  #     - name: Get version from package.json
  #       id: get_version
  #       run: |
  #         VERSION=$(node -p "require('./package.json').version")
  #         echo "version=$VERSION" >> $GITHUB_ENV

  #     - name: Create Git tag
  #       run: |
  #         git tag -a "v${{ env.version }}" -m "Release v${{ env.version }}"
  #         git push origin "v${{ env.version }}"

  #     - name: Create GitHub Release
  #       uses: actions/create-release@v1
  #       with:
  #         tag_name: "v${{ env.version }}"
  #         release_name: "v${{ env.version }}"
  #         body: |
  #           Release v${{ env.version }} includes the latest updates and fixes.
  #         draft: false
  #         prerelease: false
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GT_TOKEN }}

  publish-npm:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - name: Clean for Build
        run: yarn clean

      - name: Build package
        run: yarn prepare

      # - name: Release package
      #   env:
      #     GITHUB_TOKEN: ${{secrets.GT_TOKEN }}
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      #   run: yarn release

      # - name: Publish package to NPM
      #   run: |
      #     VERSION=$(node -p "require('./package.json').version")
      #     echo "version=$VERSION"
      #     echo "Auth=${{secrets.NPM_TOKEN}}"
      #     npm publish --provenance --access public
      #   env:
      #     NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  # build-web:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Setup
  #       uses: ./.github/actions/setup

  #     - name: Build example for Web
  #       run: |
  #         yarn example expo export --platform web
